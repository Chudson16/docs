# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, OpenDroneMap
# This file is distributed under the same license as the OpenDroneMap
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OpenDroneMap 0.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-06 21:01+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../source/large.rst:4
msgid "Splitting Large Datasets"
msgstr "Kugawa Database Kubwa"

#: ../../source/large.rst:6
msgid ""
"Starting with ODM version ``0.6.0`` you can split up very large datasets "
"into manageable chunks (called submodels), running the pipeline on each "
"chunk, and then producing merged DEMs, orthophotos and point clouds. The "
"process is referred to as \"split-merge\"."
msgstr ""
"anza na toleo la ODM ``0.6.0`` unaweza kugawa group kubwa la data linaloweza "
"kudhibitiwa (liitwalo submodels),kutumia pipeline katika kila kundi, na kisha "
"zalisha DEM itakayounganishwa, orthophoto na pointcloud. Mchakato utawekwa "
"kama \"split-merge\"."
#: ../../source/large.rst:8
msgid ""
"Why might you use the split-merge pipeline? If you have a very large "
"number of images in your dataset, split-merge will help make the "
"processing more manageable on a large machine (it will require less "
"memory). If you have many machines all connected to the same network you "
"can also process the submodels in parallel, thus allowing for horizontal "
"scaling and processing thousands of images more quickly."
msgstr ""
"Kwa nini unawezakutumia split-merge pipeline? Ikiwa una idadi ya picha "
"nyingi kwenye dataseti yako, split-merge itasaidia mchakato kuongozwa "
"vizuri katika mashine kubwa (itahitaji nafai ndogo). Ikiwa una mashine "
"nyingi zilizounganishwa katika mtandao mmoja pia unaweza kuchakata "
"submodel kwa pamoja, ndivyo itakavyoruhu kuongeza mstari mlalo na "
"kuchakata maelfu ya picha kwa urahisi zaidi." 
#: ../../source/large.rst:10
msgid ""
"Split-merge works in WebODM out of the box as long as the processing "
"nodes support split-merge, by enabling the ``--split`` option when "
"creating a new task."
msgstr ""
"Split-merge inafanya kazi ndani ya ODM  nje ya boxi ikiwa node "
"zinasaidia split-merge, kwa kuruhusu chaguo la ``--split`` "
"unapotengeneza njia mpya."
#: ../../source/large.rst:13
msgid "Calibrate images"
msgstr "Kurekebisha Picha"

#: ../../source/large.rst:15
msgid ""
"Image calibration is recommended (but not required) for large datasets "
"because error propagation due to image distortion could cause a bowl "
"effect on the models. Calibration instructions can be found at      "
"`Calibrate Images <tutorials.html#calibrating-the-camera>`_."
msgstr ""
"Kurekebisha picha ni kupendekeza (lakini sio lazima) kwa dataset nyingi,"
" kwa sababu upatikanaji wa makosa wakati wa kuvuruga picha kunaweza "
"kusababisha kubonyea katika muundo."
#: ../../source/large.rst:21
msgid ""
"Bowling effect on point cloud over 13,000+ image dataset collected by "
"World Bank Tanzania over the flood prone Msimbasi Basin, Dar es Salaam, "
"Tanzania."
msgstr ""
"Madhara ya kubonyea picha juu ya point cloudi kwa kundi kubwa "
"lapicha zaidi ya 13,000+ zilizokusanywa na World Bank Tanzania katika "
"maeneo ya mafuriko Msimbasi Basin, Dar es Salaam, Tanzania."

#: ../../source/large.rst:24
msgid "Local Split-Merge"
msgstr "Split-Merge ya Ndani"

#: ../../source/large.rst:26
msgid ""
"Splitting a dataset into more manageable submodels and sequentially "
"processing all submodels on the same machine is easy! Just use "
"``--split`` and ``--split-overlap`` to decide the the average number of "
"images per submodels and the overlap (in meters) between submodels "
"respectively"
msgstr ""
"Mgawio wa kundi data katika submodel urahisi na katika kuchakata wepesi"
" zaidi ndani ya mashine moja kwa wepesi! Tumia ``--split`` na "
"``--split-overlap`` kuchagua nambari ya picha inayotakiwa kwa kila "
"submodel na mpishano (katika meters) baina ya submodel mfululizo."
#: ../../source/large.rst:32
msgid ""
"If you already know how you want to split the dataset, you can provide "
"that information and it will be used instead of the clustering algorithm."
msgstr ""
"Ikiwa unajua vipi unaweza kugawa dataseti, unaweza kutoa maelezo na "
"itatumiaka badala ya cluster algorithim."
#: ../../source/large.rst:34
msgid ""
"The grouping can be provided by adding a file named image_groups.txt in "
"the main dataset folder. The file should have one line per image. Each "
"line should have two words: first the name of the image and second the "
"name of the group it belongs to. For example::"
msgstr ""
"Kundi linaweza kupatika kwa kuengeza faili linaloitwa image_groups.txt "
"katika folder kuu la dataseti. Faili lazima liwe na mstari mmoja kwa "
"kila picha. Kila mstari lazima uwe na maneno mawili: La kwanza ni "
"jina la picha na pili ni jina la kundi la picha. Kwa Mfano::"
#: ../../source/large.rst:42
msgid ""
"will create 3 submodels. Make sure to pass ``--split-overlap 0`` if you "
"manually provide a ``image_groups.txt`` file."
msgstr ""
" utatengeza submodel 3. Hakikisha unapitisha ``--split-overlap 0`` ikiwa"
" unatengeneza mwenyewe ``image_groups.txt`` faili."
#: ../../source/large.rst:46
msgid "Distributed Split-Merge"
msgstr "Kugawanya Split-Merge"

#: ../../source/large.rst:48
msgid ""
"ODM can also automatically distribute the processing of each submodel to "
"multiple machines via `NodeODM "
"<https://github.com/OpenDroneMap/NodeODM>`_ nodes, orchestrated via "
"`ClusterODM <https://github.com/OpenDroneMap/ClusterODM>`_."
msgstr ""
"ODM pia inaweza kugawanya wenyewe mchakato wa kila submodel kwa mashine "
"tofauti kupitia `NodeODM "
"<https://github.com/OpenDroneMap/NodeODM>`_ nodes, orchestrated via "
"`ClusterODM <https://github.com/OpenDroneMap/ClusterODM>`_."
#: ../../source/large.rst:55
msgid "Getting Started with Distributed Split-Merge"
msgstr "Kupata kuanza pamoja na kugawanya Split-Merge"

#: ../../source/large.rst:57
msgid "The first step is start ClusterODM"
msgstr "Njia ya mwanzo ni kustart ClusterODM"

#: ../../source/large.rst:63
msgid ""
"Then on each machine you want to use for processing, launch a NodeODM "
"instance via"
msgstr ""
"Kisha kwa kila mashine ambayo unataka kutumia kwa mchakato, zindua "
"NodeODM instance kutumia"
#: ../../source/large.rst:69
msgid ""
"Connect via telnet to ClusterODM and add the IP addresses/port of the "
"machines running NodeODM"
msgstr ""
"Connect kupitia telnethadi ClusterODM na ongeza IP addresses/port "
"katika mashine inayotumika NodeODM"
#: ../../source/large.rst:84
msgid "Make sure you are running version ``1.5.1`` or higher of the NodeODM API."
msgstr "Hakikisha unatumia toleo la ``1.5.1`` au kubwa zaidi la NodeODM API."

#: ../../source/large.rst:86
msgid ""
"At this point, simply use the ``--sm-cluster`` option to enable "
"distributed split-merge"
msgstr ""
"Ukifikia hapo, ni rahisi kutumia ``--sm-cluster`` option kuruhusu "
"kugawanya split-merge"
#: ../../source/large.rst:93
msgid "Understanding the Cluster"
msgstr "Kufahamu Cluster"

#: ../../source/large.rst:95
msgid ""
"When connected via telnet, it is possible to interrogate what is "
"happening on the cluster. For example, we can use the command HELP to "
"find out available commands"
msgstr ""
"Ukiunganisha kupitia telnet, ni rahisi kufahamu nini kinaendelea ndani "
ya cluster.Kwa Mfano, tunaweza kuchumia camand HELP kutafuta camand "
"zinazopatika."
#: ../../source/large.rst:118
msgid ""
"If, for example, the NodeODM instance wasn't active when ClusterODM "
"started, we might list nodes and see something as follows"
msgstr ""
"Ikiwa, kwa mfano, NodeODM instance haifanyi kazi wakati ClusterODM "
"ikiwashwa, tunaweza kuorodhesha node na tukaangalia kama ifuatavyo,"
#: ../../source/large.rst:125
msgid ""
"To address this, we can start up our local node (if not already started),"
" and then perform a ``NODE UPDATE``"
msgstr ""
"Kulitambua hili, tunaweza kuanza na kuwasha node ya ndani (ikiwa "
"haikuwashwa), na kisha tumia ``NODE UPDATE``"
#: ../../source/large.rst:135
msgid "Accessing the Logs"
msgstr "Kupata Logs"

#: ../../source/large.rst:137
msgid ""
"While a process is running, it is also possible to list the tasks, and "
"view the task output"
msgstr ""
"Wakati mchakato unaendelea, pia ni rahisi kuorodhesha kazi, na "
"muonekano wa matokeo ya kazi."
#: ../../source/large.rst:145
msgid "Autoscaling ClusterODM"
msgstr "Autoscaling ClusterODM"

#: ../../source/large.rst:147
msgid ""
"ClusterODM also includes the option to autoscale on multiple platforms, "
"including, to date, Amazon and Digital Ocean. This allows users to reduce"
" costs associated with always-on instances as well as being able to scale"
" processing based on demand."
msgstr ""
"ClusterODM pia inakusanya njia za kujipima wenyeweplatform tofauti, ikiwemo,"
" to date, Amazon na digital Ocean. Hii inawezesha watumiaji kupunguza "
"gharama zitokanazo na always-on instance vile vile kuweza kupima "
"mchakano kutokana na mahitaji."
#: ../../source/large.rst:149
msgid "To setup autoscaling you must:"
msgstr "Kupanga autoscaling lazima:"

#: ../../source/large.rst:151
msgid "Have a functioning version of NodeJS installed and then install ClusterODM"
msgstr "Uwe na toleo linalofanya kazi NodeJS limeingizwa na kisha na ingiza ClusterODM"

#: ../../source/large.rst:159
msgid "Make sure docker-machine is installed."
msgstr "Hakikisha docker-machine imeingizwa"

#: ../../source/large.rst:160
msgid "Setup a S3-compatible bucket for storing results."
msgstr "Panga S3-compatible bucket kwa kuhifadhia."

#: ../../source/large.rst:161
msgid ""
"Create a configuration file for `DigitalOcean "
"<https://github.com/OpenDroneMap/ClusterODM/blob/master/docs/digitalocean.md>`_"
" or `Amazon Web Services "
"<https://github.com/OpenDroneMap/ClusterODM/blob/master/docs/aws.md>`_."
msgstr ""
"Tengeneza configuration faili kwa `DigitalOcean "
"<https://github.com/OpenDroneMap/ClusterODM/blob/master/docs/digitalocean.md>`_"
" au `Amazon Web Services "
"<https://github.com/OpenDroneMap/ClusterODM/blob/master/docs/aws.md>`_."
#: ../../source/large.rst:163
msgid "You can then launch ClusterODM with"
msgstr "Kisha unaweza kuwasha ClusterODM pamoja"

#: ../../source/large.rst:169
msgid "You should see something similar to following messages in the console"
msgstr "Utaona kitu kinachofanana kwa ujumbe ufuatao ndani ya console"

#: ../../source/large.rst:177
#, python-format
msgid ""
"You should always have at least one static NodeODM node attached to "
"ClusterODM, even if you plan to use the autoscaler for all processing. If"
" you setup auto scaling, you can't have zero nodes and rely 100% on the "
"autoscaler. You need to attach a NodeODM node to act as the \"reference "
"node\" otherwise ClusterODM will not know how to handle certain requests "
"(for the forwarding the UI, for validating options prior to spinning up "
"an instance, etc.). For this purpose, you should add a \"dummy\" NodeODM "
"node and lock it"
msgstr ""
"kawaida unaweza kuwa na angalau static NodeODM node moja iliyoungana na "
"ClusterODM, hata kama umepanga kutumia autoscaler kwa michakato yote. "
"Ikiwa umepanga auto scaling, huwezi kuwa na zero node na inategemea "
"100% ya autoscaler. Unahitaji kuambatanisha NodeODM kuwa kama \"reference"
" node\" au vyenginevyo ClusterODM haitajua jinsiya kushuhulikia baadhi "
"ya maombi (kwa kupeleka UI, kwa kuruhusu njia za mwanzo kuzunguruka "
"instance, etc.). Kwa malengo haya utaweka \"dummy"\ NodeODM node na "
"kuifunga."
#: ../../source/large.rst:187
msgid "This way all tasks will be automatically forwarded to the autoscaler."
msgstr "Njia hii hii kazi zote zinapelekwa wenyewe kwa autoscaler."

#: ../../source/large.rst:190
msgid "Limitations"
msgstr "Mipaka"

#: ../../source/large.rst:192
msgid ""
"The 3D textured meshes are currently not being merged as part of the "
"workflow (only point clouds, DEMs and orthophotos are)."
msgstr ""
"Mfumo wa 3D meshes kwa sasa haijaunganishwa kama sehemu ya mpangilio "
"kazi (Ni point cloud pekee, DEM na orthophoto)."
#: ../../source/large.rst:194
msgid ""
"GCPs are fully supported, however, there needs to be at least 3 GCP "
"points on each submodel for the georeferencing to take place. If a "
"submodel has fewer than 3 GCPs, a combination of the remaining GCPs + "
"EXIF data will be used instead (which is going to be less accurate). We "
"recommend using the ``image_groups.txt`` file to accurately control the "
"submodel split when using GCPs."
msgstr ""
"GCPs inasaidiwa kikamilifu, lakini kuna mahitaji angalau point 3 za GCP "
"kwa kila submodel kwa georeferencing kuchukua nafasi. Ikiwa submodel "
"ina unafuu kuliko GCP 3, muungano wa GCP zilobakia + EXIF data "
"zitatumika badala yake (ambayo itakua na usahihi mdogo). Tunapendekeza"
" kutumia ``image_groups.txt`` faili kupelekea udhibiti sahihi wa "
"mgawanyo wa submodel ukitumia GCP."
#: ../../source/large.rst:197
msgid "Acknowledgments"
msgstr "Tunakiri"

#: ../../source/large.rst:198
msgid ""
"Huge props to Pau and the folks at Mapillary for their amazing "
"contributions to OpenDroneMap through their OpenSfM code, which is a key "
"component of the split-merge pipeline. We look forward to further pushing"
" the limits of OpenDroneMap and seeing how big a dataset we can process."
msgstr ""
"Sifa kubwa kwa Pau na folks kwa Mapillary kushiriki kwema kwa OpenDroneMap"
"kupitia OpenSfM code, ambacho ni kijenzi cha msingi kwa split-merge pipeline."
" Tunaangalia mbelekwa kusukuma zaidi upeo wa OpenDroneMap na kuangalia vipi "
"dataset kubwa zinaweza kuchakatwa."
#: ../../source/large.rst:200
msgid ""
"`Help edit these docs! "
"<https://github.com/OpenDroneMap/docs/blob/publish/source/large.rst>`_"
msgstr ""
"`kwa msaada kurekebisha kitabu! "
"<https://github.com/OpenDroneMap/docs/blob/publish/source/contributing.rst>`_"
